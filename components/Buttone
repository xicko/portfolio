'use client';

import React, { useEffect, useRef } from 'react';

const Button: React.FC = () => {
  // Create refs for the buttons to avoid potential null errors
  const leftButtonRef = useRef<HTMLButtonElement>(null);
  const rightButtonRef = useRef<HTMLButtonElement>(null);

  const leftClick = (): void => {
    const boov = document.getElementById('boov');
    if (boov) {
      boov.style.left = '0px';
    }
  };

  const rightClick = (): void => {
    const boov = document.getElementById('boov');
    if (boov) {
      boov.style.left = '165.5px';
    }
  };

  useEffect(() => {
    // Access the buttons using refs
    const leftButton = leftButtonRef.current;
    const rightButton = rightButtonRef.current;

    if (leftButton && rightButton) {
      leftButton.addEventListener('click', leftClick);
      rightButton.addEventListener('click', rightClick);
    }

    // Cleanup event listeners when the component unmounts
    return () => {
      if (leftButton && rightButton) {
        leftButton.removeEventListener('click', leftClick);
        rightButton.removeEventListener('click', rightClick);
      }
    };
  }, []); // Empty dependency array ensures useEffect runs only once

  return (
    <div className='flex justify-center'>
      <div className='relative flex flex-row md:mx-0 mx-4'>
        <div id='boov' className='bg-[#D7E0FF] md:w-[165px] w-[130px] h-full absolute  ease-in-out transition duration-75 rounded-[6px]'>
          {/* ... */}
        </div>

        <button
          id='leftButton'
          className='bg-[#282E44] bg-opacity-40 text-[#1D2233] text-center md:px-8 md:pr-10 px-6 py-3 rounded-l-[6px]'
          ref={leftButtonRef} // Assign ref to the button
          onClick={leftClick}
        >
          <p className='text-white'>Web Projects</p>
          <p  className='z-50 -mt-6 absolute'>Web Projects</p>
        </button>

        <button
          id='rightButton'
          className='bg-[#282E44] bg-opacity-40 text-[#1D2233] text-center md:px-8 md:pl-10 px-6 py-3 rounded-r-[6px]'
          ref={rightButtonRef} // Assign ref to the button
          onClick={rightClick}
        >
          <p className='z-20'>AR Projects</p>
        </button>
      </div>
    </div>
  );
};

export default Button;
